name: Deploy FastAPI App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      HOST: 159.89.245.206
      USERNAME: kevinlin192003
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to DigitalOcean
        run: |
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << 'EOF'
            set -e

            echo "Setting environment variables manually..."
            GITHUB_REPO="git@github.com:kl63/fastapi-app.git"
            TARGET_DIR="/var/www/fastapi-app"
            APP_NAME="fastapi-app"

            echo "Checking if project directory exists..."
            if [ ! -d "$TARGET_DIR/.git" ]; then
              echo "Cloning project repository..."
              git clone "$GITHUB_REPO" "$TARGET_DIR"
            fi

            echo "Navigating to project directory..."
            cd "$TARGET_DIR"

            echo "Fetching latest code from GitHub..."
            git fetch origin
            git reset --hard origin/main

            echo "Activating virtual environment..."
            if [ ! -d "venv" ]; then
              echo "Creating virtual environment..."
              python3 -m venv venv
            fi
            source venv/bin/activate

            echo "Installing dependencies..."
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "Exporting DATABASE_URL securely..."
            export DATABASE_URL='${DATABASE_URL}'

            echo "Running deploy script..."
            python scripts/deploy.py || echo "Migration failed, continuing..."

            echo "Checking for PM2..."
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2..."
              npm install -g pm2
            fi

            echo "Restarting FastAPI app with PM2..."
            pm2 restart $APP_NAME || pm2 start "gunicorn -w 4 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:8000" --interpreter bash --name $APP_NAME

            echo "Saving PM2 state..."
            pm2 save
          EOF
