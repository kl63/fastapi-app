      - name: Deploy to DigitalOcean
        env:
          HOST: 159.89.245.206
          USERNAME: kevinlin192003
          TARGET_DIR: /var/www/fastapi_app
          APP_NAME: fastapi_app
          PORT: 8000

          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}

        run: |
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "
            set -e

            echo '🚀 Starting deployment on server...'

            # Create app directory if missing
            mkdir -p $TARGET_DIR
            cd $TARGET_DIR

            # If repo not cloned yet, clone it
            if [ ! -d '.git' ]; then
              echo 'Cloning repository for the first time...'
              git clone https://github.com/${GITHUB_REPOSITORY}.git .
            fi

            echo 'Fetching latest code...'
            git fetch origin
            git reset --hard origin/main

            echo 'Setting up Python virtual environment...'
            if [ ! -d 'venv' ]; then
              python3 -m venv venv
            fi
            source venv/bin/activate

            echo 'Installing dependencies...'
            pip install --upgrade pip
            pip install -r requirements.txt

            echo 'Writing environment variables to .env file...'
            echo 'POSTGRES_USER=$POSTGRES_USER' > .env
            echo 'POSTGRES_PASSWORD=$POSTGRES_PASSWORD' >> .env
            echo 'POSTGRES_DB=$POSTGRES_DB' >> .env
            echo 'POSTGRES_HOST=$POSTGRES_HOST' >> .env
            echo 'POSTGRES_PORT=$POSTGRES_PORT' >> .env

            echo 'Running database migrations...'
            if [ -d 'alembic' ]; then
              alembic upgrade head
            else
              echo '⚠️ No Alembic folder found — skipping migrations.'
            fi

            echo 'Ensuring PM2 is installed...'
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi

            echo 'Starting or restarting FastAPI app with PM2...'
            if pm2 list | grep -q $APP_NAME; then
              pm2 restart $APP_NAME
            else
              pm2 start venv/bin/uvicorn --name $APP_NAME -- \
                main:app --host 0.0.0.0 --port=$PORT
            fi

            pm2 save
            echo '✅ Deployment complete!'
          "
